import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import { useSession, signIn, signOut } from "next-auth/react";

const Home: NextPage = () => {
  const hello = trpc.useQuery(["example.hello", { text: "from tRPC" }]);
  const { status, data: session } = useSession();
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex flex-col items-center justify-center min-h-screen p-4">
        <h1 className="text-5xl md:text-[5rem] leading-normal font-extrabold text-gray-700">
          Discord <span className="text-purple-300">Clone</span> App
        </h1>
        <p className="text-2xl text-gray-700">User logged-in status:</p>
        <div className="pt-6 text-2xl text-blue-500 flex justify-center items-center w-full uppercase">{status}</div>
        <div className="pt-6 text-2xl text-blue-500 flex justify-center items-center w-full">
          {status === "unauthenticated" && (
            <button type="button" onClick={() => signIn()}>
              Login
            </button>
          )}
          {status !== "loading" && status === "authenticated" && (
            <button type="button" onClick={() => signOut()}>
              Logout
            </button>
          )}
        </div>
        {status !== "loading" && status === "authenticated" && (
          <div>
            <pre>{JSON.stringify(session, null, 2)}</pre>
          </div>
        )}
        <p className="pt-10 text-2xl text-gray-700">This stack uses:</p>
        <div className="pt-6 text-2xl text-blue-500 flex justify-center items-center w-full">
          {hello.data ? <p>{hello.data.greeting}</p> : <p>Loading..</p>}
        </div>
      </main>
    </>
  );
};

export default Home;
